/* Generated by wayland-scanner 1.20.0 */

#ifndef VELOX_CLIENT_PROTOCOL_H
#define VELOX_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_velox The velox protocol
 * @section page_ifaces_velox Interfaces
 * - @subpage page_iface_velox - 
 * - @subpage page_iface_velox_screen - 
 * - @subpage page_iface_velox_tag - 
 */
struct swc_screen;
struct velox;
struct velox_screen;
struct velox_tag;

#ifndef VELOX_INTERFACE
#define VELOX_INTERFACE
/**
 * @page page_iface_velox velox
 * @section page_iface_velox_api API
 * See @ref iface_velox.
 */
/**
 * @defgroup iface_velox The velox interface
 */
extern const struct wl_interface velox_interface;
#endif
#ifndef VELOX_SCREEN_INTERFACE
#define VELOX_SCREEN_INTERFACE
/**
 * @page page_iface_velox_screen velox_screen
 * @section page_iface_velox_screen_api API
 * See @ref iface_velox_screen.
 */
/**
 * @defgroup iface_velox_screen The velox_screen interface
 */
extern const struct wl_interface velox_screen_interface;
#endif
#ifndef VELOX_TAG_INTERFACE
#define VELOX_TAG_INTERFACE
/**
 * @page page_iface_velox_tag velox_tag
 * @section page_iface_velox_tag_api API
 * See @ref iface_velox_tag.
 */
/**
 * @defgroup iface_velox_tag The velox_tag interface
 */
extern const struct wl_interface velox_tag_interface;
#endif

#ifndef VELOX_ERROR_ENUM
#define VELOX_ERROR_ENUM
enum velox_error {
	/**
	 * the screen is invalid
	 */
	VELOX_ERROR_INVALID_SCREEN = 0,
};
#endif /* VELOX_ERROR_ENUM */

#define VELOX_GET_SCREEN 0


/**
 * @ingroup iface_velox
 */
#define VELOX_GET_SCREEN_SINCE_VERSION 1

/** @ingroup iface_velox */
static inline void
velox_set_user_data(struct velox *velox, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) velox, user_data);
}

/** @ingroup iface_velox */
static inline void *
velox_get_user_data(struct velox *velox)
{
	return wl_proxy_get_user_data((struct wl_proxy *) velox);
}

static inline uint32_t
velox_get_version(struct velox *velox)
{
	return wl_proxy_get_version((struct wl_proxy *) velox);
}

/** @ingroup iface_velox */
static inline void
velox_destroy(struct velox *velox)
{
	wl_proxy_destroy((struct wl_proxy *) velox);
}

/**
 * @ingroup iface_velox
 */
static inline struct velox_screen *
velox_get_screen(struct velox *velox, struct swc_screen *screen)
{
	struct wl_proxy *velox_screen;

	velox_screen = wl_proxy_marshal_flags((struct wl_proxy *) velox,
			 VELOX_GET_SCREEN, &velox_screen_interface, wl_proxy_get_version((struct wl_proxy *) velox), 0, screen, NULL);

	return (struct velox_screen *) velox_screen;
}

/**
 * @ingroup iface_velox_screen
 * @struct velox_screen_listener
 */
struct velox_screen_listener {
	/**
	 */
	void (*focus)(void *data,
		      struct velox_screen *velox_screen,
		      const char *title,
		      struct velox_tag *tag);
};

/**
 * @ingroup iface_velox_screen
 */
static inline int
velox_screen_add_listener(struct velox_screen *velox_screen,
			  const struct velox_screen_listener *listener, void *data)
{
	return wl_proxy_add_listener((struct wl_proxy *) velox_screen,
				     (void (**)(void)) listener, data);
}

/**
 * @ingroup iface_velox_screen
 */
#define VELOX_SCREEN_FOCUS_SINCE_VERSION 1


/** @ingroup iface_velox_screen */
static inline void
velox_screen_set_user_data(struct velox_screen *velox_screen, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) velox_screen, user_data);
}

/** @ingroup iface_velox_screen */
static inline void *
velox_screen_get_user_data(struct velox_screen *velox_screen)
{
	return wl_proxy_get_user_data((struct wl_proxy *) velox_screen);
}

static inline uint32_t
velox_screen_get_version(struct velox_screen *velox_screen)
{
	return wl_proxy_get_version((struct wl_proxy *) velox_screen);
}

/** @ingroup iface_velox_screen */
static inline void
velox_screen_destroy(struct velox_screen *velox_screen)
{
	wl_proxy_destroy((struct wl_proxy *) velox_screen);
}

/**
 * @ingroup iface_velox_tag
 * @struct velox_tag_listener
 */
struct velox_tag_listener {
	/**
	 */
	void (*name)(void *data,
		     struct velox_tag *velox_tag,
		     const char *name);
	/**
	 */
	void (*state)(void *data,
		      struct velox_tag *velox_tag,
		      uint32_t num_windows);
	/**
	 */
	void (*screen)(void *data,
		       struct velox_tag *velox_tag,
		       struct velox_screen *screen);
};

/**
 * @ingroup iface_velox_tag
 */
static inline int
velox_tag_add_listener(struct velox_tag *velox_tag,
		       const struct velox_tag_listener *listener, void *data)
{
	return wl_proxy_add_listener((struct wl_proxy *) velox_tag,
				     (void (**)(void)) listener, data);
}

/**
 * @ingroup iface_velox_tag
 */
#define VELOX_TAG_NAME_SINCE_VERSION 1
/**
 * @ingroup iface_velox_tag
 */
#define VELOX_TAG_STATE_SINCE_VERSION 1
/**
 * @ingroup iface_velox_tag
 */
#define VELOX_TAG_SCREEN_SINCE_VERSION 1


/** @ingroup iface_velox_tag */
static inline void
velox_tag_set_user_data(struct velox_tag *velox_tag, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) velox_tag, user_data);
}

/** @ingroup iface_velox_tag */
static inline void *
velox_tag_get_user_data(struct velox_tag *velox_tag)
{
	return wl_proxy_get_user_data((struct wl_proxy *) velox_tag);
}

static inline uint32_t
velox_tag_get_version(struct velox_tag *velox_tag)
{
	return wl_proxy_get_version((struct wl_proxy *) velox_tag);
}

/** @ingroup iface_velox_tag */
static inline void
velox_tag_destroy(struct velox_tag *velox_tag)
{
	wl_proxy_destroy((struct wl_proxy *) velox_tag);
}

#ifdef  __cplusplus
}
#endif

#endif
