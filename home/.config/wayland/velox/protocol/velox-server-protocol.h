/* Generated by wayland-scanner 1.20.0 */

#ifndef VELOX_SERVER_PROTOCOL_H
#define VELOX_SERVER_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-server.h"

#ifdef  __cplusplus
extern "C" {
#endif

struct wl_client;
struct wl_resource;

/**
 * @page page_velox The velox protocol
 * @section page_ifaces_velox Interfaces
 * - @subpage page_iface_velox - 
 * - @subpage page_iface_velox_screen - 
 * - @subpage page_iface_velox_tag - 
 */
struct swc_screen;
struct velox;
struct velox_screen;
struct velox_tag;

#ifndef VELOX_INTERFACE
#define VELOX_INTERFACE
/**
 * @page page_iface_velox velox
 * @section page_iface_velox_api API
 * See @ref iface_velox.
 */
/**
 * @defgroup iface_velox The velox interface
 */
extern const struct wl_interface velox_interface;
#endif
#ifndef VELOX_SCREEN_INTERFACE
#define VELOX_SCREEN_INTERFACE
/**
 * @page page_iface_velox_screen velox_screen
 * @section page_iface_velox_screen_api API
 * See @ref iface_velox_screen.
 */
/**
 * @defgroup iface_velox_screen The velox_screen interface
 */
extern const struct wl_interface velox_screen_interface;
#endif
#ifndef VELOX_TAG_INTERFACE
#define VELOX_TAG_INTERFACE
/**
 * @page page_iface_velox_tag velox_tag
 * @section page_iface_velox_tag_api API
 * See @ref iface_velox_tag.
 */
/**
 * @defgroup iface_velox_tag The velox_tag interface
 */
extern const struct wl_interface velox_tag_interface;
#endif

#ifndef VELOX_ERROR_ENUM
#define VELOX_ERROR_ENUM
enum velox_error {
	/**
	 * the screen is invalid
	 */
	VELOX_ERROR_INVALID_SCREEN = 0,
};
#endif /* VELOX_ERROR_ENUM */

/**
 * @ingroup iface_velox
 * @struct velox_interface
 */
struct velox_interface {
	/**
	 */
	void (*get_screen)(struct wl_client *client,
			   struct wl_resource *resource,
			   struct wl_resource *screen,
			   uint32_t velox_screen);
};


/**
 * @ingroup iface_velox
 */
#define VELOX_GET_SCREEN_SINCE_VERSION 1

#define VELOX_SCREEN_FOCUS 0

/**
 * @ingroup iface_velox_screen
 */
#define VELOX_SCREEN_FOCUS_SINCE_VERSION 1


/**
 * @ingroup iface_velox_screen
 * Sends an focus event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
velox_screen_send_focus(struct wl_resource *resource_, const char *title, struct wl_resource *tag)
{
	wl_resource_post_event(resource_, VELOX_SCREEN_FOCUS, title, tag);
}

#define VELOX_TAG_NAME 0
#define VELOX_TAG_STATE 1
#define VELOX_TAG_SCREEN 2

/**
 * @ingroup iface_velox_tag
 */
#define VELOX_TAG_NAME_SINCE_VERSION 1
/**
 * @ingroup iface_velox_tag
 */
#define VELOX_TAG_STATE_SINCE_VERSION 1
/**
 * @ingroup iface_velox_tag
 */
#define VELOX_TAG_SCREEN_SINCE_VERSION 1


/**
 * @ingroup iface_velox_tag
 * Sends an name event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
velox_tag_send_name(struct wl_resource *resource_, const char *name)
{
	wl_resource_post_event(resource_, VELOX_TAG_NAME, name);
}

/**
 * @ingroup iface_velox_tag
 * Sends an state event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
velox_tag_send_state(struct wl_resource *resource_, uint32_t num_windows)
{
	wl_resource_post_event(resource_, VELOX_TAG_STATE, num_windows);
}

/**
 * @ingroup iface_velox_tag
 * Sends an screen event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
velox_tag_send_screen(struct wl_resource *resource_, struct wl_resource *screen)
{
	wl_resource_post_event(resource_, VELOX_TAG_SCREEN, screen);
}

#ifdef  __cplusplus
}
#endif

#endif
